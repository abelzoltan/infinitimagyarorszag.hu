<?php
// This file was auto-generated from sdk-root/src/data/iam/2010-05-08/api-2.json
return [ 'version' => '2.0', 'metadata' => [ 'apiVersion' => '2010-05-08', 'endpointPrefix' => 'iam', 'globalEndpoint' => 'iam.amazonaws.com', 'protocol' => 'query', 'serviceAbbreviation' => 'IAM', 'serviceFullName' => 'AWS Identity and Access Management', 'signatureVersion' => 'v4', 'uid' => 'iam-2010-05-08', 'xmlNamespace' => 'https://iam.amazonaws.com/doc/2010-05-08/', ], 'operations' => [ 'AddClientIDToOpenIDConnectProvider' => [ 'name' => 'AddClientIDToOpenIDConnectProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddClientIDToOpenIDConnectProviderRequest', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'AddRoleToInstanceProfile' => [ 'name' => 'AddRoleToInstanceProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddRoleToInstanceProfileRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'UnmodifiableEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'AddUserToGroup' => [ 'name' => 'AddUserToGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AddUserToGroupRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'AttachGroupPolicy' => [ 'name' => 'AttachGroupPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachGroupPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'AttachRolePolicy' => [ 'name' => 'AttachRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachRolePolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'UnmodifiableEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'AttachUserPolicy' => [ 'name' => 'AttachUserPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'AttachUserPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ChangePassword' => [ 'name' => 'ChangePassword', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ChangePasswordRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidUserTypeException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'PasswordPolicyViolationException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateAccessKey' => [ 'name' => 'CreateAccessKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateAccessKeyRequest', ], 'output' => [ 'shape' => 'CreateAccessKeyResponse', 'resultWrapper' => 'CreateAccessKeyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateAccountAlias' => [ 'name' => 'CreateAccountAlias', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateAccountAliasRequest', ], 'errors' => [ [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateGroup' => [ 'name' => 'CreateGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateGroupRequest', ], 'output' => [ 'shape' => 'CreateGroupResponse', 'resultWrapper' => 'CreateGroupResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateInstanceProfile' => [ 'name' => 'CreateInstanceProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateInstanceProfileRequest', ], 'output' => [ 'shape' => 'CreateInstanceProfileResponse', 'resultWrapper' => 'CreateInstanceProfileResult', ], 'errors' => [ [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateLoginProfile' => [ 'name' => 'CreateLoginProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateLoginProfileRequest', ], 'output' => [ 'shape' => 'CreateLoginProfileResponse', 'resultWrapper' => 'CreateLoginProfileResult', ], 'errors' => [ [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'PasswordPolicyViolationException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateOpenIDConnectProvider' => [ 'name' => 'CreateOpenIDConnectProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateOpenIDConnectProviderRequest', ], 'output' => [ 'shape' => 'CreateOpenIDConnectProviderResponse', 'resultWrapper' => 'CreateOpenIDConnectProviderResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreatePolicy' => [ 'name' => 'CreatePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreatePolicyRequest', ], 'output' => [ 'shape' => 'CreatePolicyResponse', 'resultWrapper' => 'CreatePolicyResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreatePolicyVersion' => [ 'name' => 'CreatePolicyVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreatePolicyVersionRequest', ], 'output' => [ 'shape' => 'CreatePolicyVersionResponse', 'resultWrapper' => 'CreatePolicyVersionResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateRole' => [ 'name' => 'CreateRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateRoleRequest', ], 'output' => [ 'shape' => 'CreateRoleResponse', 'resultWrapper' => 'CreateRoleResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateSAMLProvider' => [ 'name' => 'CreateSAMLProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateSAMLProviderRequest', ], 'output' => [ 'shape' => 'CreateSAMLProviderResponse', 'resultWrapper' => 'CreateSAMLProviderResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateServiceLinkedRole' => [ 'name' => 'CreateServiceLinkedRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateServiceLinkedRoleRequest', ], 'output' => [ 'shape' => 'CreateServiceLinkedRoleResponse', 'resultWrapper' => 'CreateServiceLinkedRoleResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateServiceSpecificCredential' => [ 'name' => 'CreateServiceSpecificCredential', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateServiceSpecificCredentialRequest', ], 'output' => [ 'shape' => 'CreateServiceSpecificCredentialResponse', 'resultWrapper' => 'CreateServiceSpecificCredentialResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceNotSupportedException', ], ], ], 'CreateUser' => [ 'name' => 'CreateUser', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateUserRequest', ], 'output' => [ 'shape' => 'CreateUserResponse', 'resultWrapper' => 'CreateUserResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'CreateVirtualMFADevice' => [ 'name' => 'CreateVirtualMFADevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'CreateVirtualMFADeviceRequest', ], 'output' => [ 'shape' => 'CreateVirtualMFADeviceResponse', 'resultWrapper' => 'CreateVirtualMFADeviceResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeactivateMFADevice' => [ 'name' => 'DeactivateMFADevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeactivateMFADeviceRequest', ], 'errors' => [ [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteAccessKey' => [ 'name' => 'DeleteAccessKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteAccessKeyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteAccountAlias' => [ 'name' => 'DeleteAccountAlias', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteAccountAliasRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteAccountPasswordPolicy' => [ 'name' => 'DeleteAccountPasswordPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteGroup' => [ 'name' => 'DeleteGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteGroupRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteGroupPolicy' => [ 'name' => 'DeleteGroupPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteGroupPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteInstanceProfile' => [ 'name' => 'DeleteInstanceProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteInstanceProfileRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteLoginProfile' => [ 'name' => 'DeleteLoginProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteLoginProfileRequest', ], 'errors' => [ [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteOpenIDConnectProvider' => [ 'name' => 'DeleteOpenIDConnectProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteOpenIDConnectProviderRequest', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeletePolicy' => [ 'name' => 'DeletePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeletePolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeletePolicyVersion' => [ 'name' => 'DeletePolicyVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeletePolicyVersionRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteRole' => [ 'name' => 'DeleteRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRoleRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'UnmodifiableEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteRolePolicy' => [ 'name' => 'DeleteRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteRolePolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'UnmodifiableEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteSAMLProvider' => [ 'name' => 'DeleteSAMLProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSAMLProviderRequest', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteSSHPublicKey' => [ 'name' => 'DeleteSSHPublicKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSSHPublicKeyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], ], ], 'DeleteServerCertificate' => [ 'name' => 'DeleteServerCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteServerCertificateRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteServiceSpecificCredential' => [ 'name' => 'DeleteServiceSpecificCredential', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteServiceSpecificCredentialRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], ], ], 'DeleteSigningCertificate' => [ 'name' => 'DeleteSigningCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteSigningCertificateRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteUser' => [ 'name' => 'DeleteUser', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteUserRequest', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteUserPolicy' => [ 'name' => 'DeleteUserPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteUserPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DeleteVirtualMFADevice' => [ 'name' => 'DeleteVirtualMFADevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DeleteVirtualMFADeviceRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'DeleteConflictException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DetachGroupPolicy' => [ 'name' => 'DetachGroupPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachGroupPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DetachRolePolicy' => [ 'name' => 'DetachRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachRolePolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'UnmodifiableEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'DetachUserPolicy' => [ 'name' => 'DetachUserPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'DetachUserPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'EnableMFADevice' => [ 'name' => 'EnableMFADevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'EnableMFADeviceRequest', ], 'errors' => [ [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'InvalidAuthenticationCodeException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GenerateCredentialReport' => [ 'name' => 'GenerateCredentialReport', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'GenerateCredentialReportResponse', 'resultWrapper' => 'GenerateCredentialReportResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetAccessKeyLastUsed' => [ 'name' => 'GetAccessKeyLastUsed', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetAccessKeyLastUsedRequest', ], 'output' => [ 'shape' => 'GetAccessKeyLastUsedResponse', 'resultWrapper' => 'GetAccessKeyLastUsedResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], ], ], 'GetAccountAuthorizationDetails' => [ 'name' => 'GetAccountAuthorizationDetails', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetAccountAuthorizationDetailsRequest', ], 'output' => [ 'shape' => 'GetAccountAuthorizationDetailsResponse', 'resultWrapper' => 'GetAccountAuthorizationDetailsResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'GetAccountPasswordPolicy' => [ 'name' => 'GetAccountPasswordPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'GetAccountPasswordPolicyResponse', 'resultWrapper' => 'GetAccountPasswordPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetAccountSummary' => [ 'name' => 'GetAccountSummary', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'GetAccountSummaryResponse', 'resultWrapper' => 'GetAccountSummaryResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'GetContextKeysForCustomPolicy' => [ 'name' => 'GetContextKeysForCustomPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetContextKeysForCustomPolicyRequest', ], 'output' => [ 'shape' => 'GetContextKeysForPolicyResponse', 'resultWrapper' => 'GetContextKeysForCustomPolicyResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], ], ], 'GetContextKeysForPrincipalPolicy' => [ 'name' => 'GetContextKeysForPrincipalPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetContextKeysForPrincipalPolicyRequest', ], 'output' => [ 'shape' => 'GetContextKeysForPolicyResponse', 'resultWrapper' => 'GetContextKeysForPrincipalPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], ], ], 'GetCredentialReport' => [ 'name' => 'GetCredentialReport', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'output' => [ 'shape' => 'GetCredentialReportResponse', 'resultWrapper' => 'GetCredentialReportResult', ], 'errors' => [ [ 'shape' => 'CredentialReportNotPresentException', ], [ 'shape' => 'CredentialReportExpiredException', ], [ 'shape' => 'CredentialReportNotReadyException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetGroup' => [ 'name' => 'GetGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetGroupRequest', ], 'output' => [ 'shape' => 'GetGroupResponse', 'resultWrapper' => 'GetGroupResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetGroupPolicy' => [ 'name' => 'GetGroupPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetGroupPolicyRequest', ], 'output' => [ 'shape' => 'GetGroupPolicyResponse', 'resultWrapper' => 'GetGroupPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetInstanceProfile' => [ 'name' => 'GetInstanceProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetInstanceProfileRequest', ], 'output' => [ 'shape' => 'GetInstanceProfileResponse', 'resultWrapper' => 'GetInstanceProfileResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetLoginProfile' => [ 'name' => 'GetLoginProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetLoginProfileRequest', ], 'output' => [ 'shape' => 'GetLoginProfileResponse', 'resultWrapper' => 'GetLoginProfileResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetOpenIDConnectProvider' => [ 'name' => 'GetOpenIDConnectProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetOpenIDConnectProviderRequest', ], 'output' => [ 'shape' => 'GetOpenIDConnectProviderResponse', 'resultWrapper' => 'GetOpenIDConnectProviderResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetPolicy' => [ 'name' => 'GetPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetPolicyRequest', ], 'output' => [ 'shape' => 'GetPolicyResponse', 'resultWrapper' => 'GetPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetPolicyVersion' => [ 'name' => 'GetPolicyVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetPolicyVersionRequest', ], 'output' => [ 'shape' => 'GetPolicyVersionResponse', 'resultWrapper' => 'GetPolicyVersionResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetRole' => [ 'name' => 'GetRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetRoleRequest', ], 'output' => [ 'shape' => 'GetRoleResponse', 'resultWrapper' => 'GetRoleResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetRolePolicy' => [ 'name' => 'GetRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetRolePolicyRequest', ], 'output' => [ 'shape' => 'GetRolePolicyResponse', 'resultWrapper' => 'GetRolePolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetSAMLProvider' => [ 'name' => 'GetSAMLProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetSAMLProviderRequest', ], 'output' => [ 'shape' => 'GetSAMLProviderResponse', 'resultWrapper' => 'GetSAMLProviderResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetSSHPublicKey' => [ 'name' => 'GetSSHPublicKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetSSHPublicKeyRequest', ], 'output' => [ 'shape' => 'GetSSHPublicKeyResponse', 'resultWrapper' => 'GetSSHPublicKeyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'UnrecognizedPublicKeyEncodingException', ], ], ], 'GetServerCertificate' => [ 'name' => 'GetServerCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetServerCertificateRequest', ], 'output' => [ 'shape' => 'GetServerCertificateResponse', 'resultWrapper' => 'GetServerCertificateResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetUser' => [ 'name' => 'GetUser', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetUserRequest', ], 'output' => [ 'shape' => 'GetUserResponse', 'resultWrapper' => 'GetUserResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'GetUserPolicy' => [ 'name' => 'GetUserPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'GetUserPolicyRequest', ], 'output' => [ 'shape' => 'GetUserPolicyResponse', 'resultWrapper' => 'GetUserPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListAccessKeys' => [ 'name' => 'ListAccessKeys', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAccessKeysRequest', ], 'output' => [ 'shape' => 'ListAccessKeysResponse', 'resultWrapper' => 'ListAccessKeysResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListAccountAliases' => [ 'name' => 'ListAccountAliases', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAccountAliasesRequest', ], 'output' => [ 'shape' => 'ListAccountAliasesResponse', 'resultWrapper' => 'ListAccountAliasesResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListAttachedGroupPolicies' => [ 'name' => 'ListAttachedGroupPolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAttachedGroupPoliciesRequest', ], 'output' => [ 'shape' => 'ListAttachedGroupPoliciesResponse', 'resultWrapper' => 'ListAttachedGroupPoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListAttachedRolePolicies' => [ 'name' => 'ListAttachedRolePolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAttachedRolePoliciesRequest', ], 'output' => [ 'shape' => 'ListAttachedRolePoliciesResponse', 'resultWrapper' => 'ListAttachedRolePoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListAttachedUserPolicies' => [ 'name' => 'ListAttachedUserPolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListAttachedUserPoliciesRequest', ], 'output' => [ 'shape' => 'ListAttachedUserPoliciesResponse', 'resultWrapper' => 'ListAttachedUserPoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListEntitiesForPolicy' => [ 'name' => 'ListEntitiesForPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListEntitiesForPolicyRequest', ], 'output' => [ 'shape' => 'ListEntitiesForPolicyResponse', 'resultWrapper' => 'ListEntitiesForPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListGroupPolicies' => [ 'name' => 'ListGroupPolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListGroupPoliciesRequest', ], 'output' => [ 'shape' => 'ListGroupPoliciesResponse', 'resultWrapper' => 'ListGroupPoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListGroups' => [ 'name' => 'ListGroups', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListGroupsRequest', ], 'output' => [ 'shape' => 'ListGroupsResponse', 'resultWrapper' => 'ListGroupsResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListGroupsForUser' => [ 'name' => 'ListGroupsForUser', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListGroupsForUserRequest', ], 'output' => [ 'shape' => 'ListGroupsForUserResponse', 'resultWrapper' => 'ListGroupsForUserResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListInstanceProfiles' => [ 'name' => 'ListInstanceProfiles', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListInstanceProfilesRequest', ], 'output' => [ 'shape' => 'ListInstanceProfilesResponse', 'resultWrapper' => 'ListInstanceProfilesResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListInstanceProfilesForRole' => [ 'name' => 'ListInstanceProfilesForRole', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListInstanceProfilesForRoleRequest', ], 'output' => [ 'shape' => 'ListInstanceProfilesForRoleResponse', 'resultWrapper' => 'ListInstanceProfilesForRoleResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListMFADevices' => [ 'name' => 'ListMFADevices', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListMFADevicesRequest', ], 'output' => [ 'shape' => 'ListMFADevicesResponse', 'resultWrapper' => 'ListMFADevicesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListOpenIDConnectProviders' => [ 'name' => 'ListOpenIDConnectProviders', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListOpenIDConnectProvidersRequest', ], 'output' => [ 'shape' => 'ListOpenIDConnectProvidersResponse', 'resultWrapper' => 'ListOpenIDConnectProvidersResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListPolicies' => [ 'name' => 'ListPolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListPoliciesRequest', ], 'output' => [ 'shape' => 'ListPoliciesResponse', 'resultWrapper' => 'ListPoliciesResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListPolicyVersions' => [ 'name' => 'ListPolicyVersions', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListPolicyVersionsRequest', ], 'output' => [ 'shape' => 'ListPolicyVersionsResponse', 'resultWrapper' => 'ListPolicyVersionsResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListRolePolicies' => [ 'name' => 'ListRolePolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListRolePoliciesRequest', ], 'output' => [ 'shape' => 'ListRolePoliciesResponse', 'resultWrapper' => 'ListRolePoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListRoles' => [ 'name' => 'ListRoles', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListRolesRequest', ], 'output' => [ 'shape' => 'ListRolesResponse', 'resultWrapper' => 'ListRolesResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListSAMLProviders' => [ 'name' => 'ListSAMLProviders', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSAMLProvidersRequest', ], 'output' => [ 'shape' => 'ListSAMLProvidersResponse', 'resultWrapper' => 'ListSAMLProvidersResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListSSHPublicKeys' => [ 'name' => 'ListSSHPublicKeys', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSSHPublicKeysRequest', ], 'output' => [ 'shape' => 'ListSSHPublicKeysResponse', 'resultWrapper' => 'ListSSHPublicKeysResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], ], ], 'ListServerCertificates' => [ 'name' => 'ListServerCertificates', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListServerCertificatesRequest', ], 'output' => [ 'shape' => 'ListServerCertificatesResponse', 'resultWrapper' => 'ListServerCertificatesResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListServiceSpecificCredentials' => [ 'name' => 'ListServiceSpecificCredentials', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListServiceSpecificCredentialsRequest', ], 'output' => [ 'shape' => 'ListServiceSpecificCredentialsResponse', 'resultWrapper' => 'ListServiceSpecificCredentialsResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceNotSupportedException', ], ], ], 'ListSigningCertificates' => [ 'name' => 'ListSigningCertificates', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListSigningCertificatesRequest', ], 'output' => [ 'shape' => 'ListSigningCertificatesResponse', 'resultWrapper' => 'ListSigningCertificatesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListUserPolicies' => [ 'name' => 'ListUserPolicies', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListUserPoliciesRequest', ], 'output' => [ 'shape' => 'ListUserPoliciesResponse', 'resultWrapper' => 'ListUserPoliciesResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ListUsers' => [ 'name' => 'ListUsers', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListUsersRequest', ], 'output' => [ 'shape' => 'ListUsersResponse', 'resultWrapper' => 'ListUsersResult', ], 'errors' => [ [ 'shape' => 'ServiceFailureException', ], ], ], 'ListVirtualMFADevices' => [ 'name' => 'ListVirtualMFADevices', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ListVirtualMFADevicesRequest', ], 'output' => [ 'shape' => 'ListVirtualMFADevicesResponse', 'resultWrapper' => 'ListVirtualMFADevicesResult', ], ], 'PutGroupPolicy' => [ 'name' => 'PutGroupPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutGroupPolicyRequest', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'PutRolePolicy' => [ 'name' => 'PutRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutRolePolicyRequest', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'UnmodifiableEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'PutUserPolicy' => [ 'name' => 'PutUserPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'PutUserPolicyRequest', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'RemoveClientIDFromOpenIDConnectProvider' => [ 'name' => 'RemoveClientIDFromOpenIDConnectProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemoveClientIDFromOpenIDConnectProviderRequest', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'RemoveRoleFromInstanceProfile' => [ 'name' => 'RemoveRoleFromInstanceProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemoveRoleFromInstanceProfileRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'UnmodifiableEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'RemoveUserFromGroup' => [ 'name' => 'RemoveUserFromGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'RemoveUserFromGroupRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'ResetServiceSpecificCredential' => [ 'name' => 'ResetServiceSpecificCredential', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ResetServiceSpecificCredentialRequest', ], 'output' => [ 'shape' => 'ResetServiceSpecificCredentialResponse', 'resultWrapper' => 'ResetServiceSpecificCredentialResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], ], ], 'ResyncMFADevice' => [ 'name' => 'ResyncMFADevice', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'ResyncMFADeviceRequest', ], 'errors' => [ [ 'shape' => 'InvalidAuthenticationCodeException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'SetDefaultPolicyVersion' => [ 'name' => 'SetDefaultPolicyVersion', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SetDefaultPolicyVersionRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'SimulateCustomPolicy' => [ 'name' => 'SimulateCustomPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SimulateCustomPolicyRequest', ], 'output' => [ 'shape' => 'SimulatePolicyResponse', 'resultWrapper' => 'SimulateCustomPolicyResult', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'PolicyEvaluationException', ], ], ], 'SimulatePrincipalPolicy' => [ 'name' => 'SimulatePrincipalPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'SimulatePrincipalPolicyRequest', ], 'output' => [ 'shape' => 'SimulatePolicyResponse', 'resultWrapper' => 'SimulatePrincipalPolicyResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'PolicyEvaluationException', ], ], ], 'UpdateAccessKey' => [ 'name' => 'UpdateAccessKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateAccessKeyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateAccountPasswordPolicy' => [ 'name' => 'UpdateAccountPasswordPolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateAccountPasswordPolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateAssumeRolePolicy' => [ 'name' => 'UpdateAssumeRolePolicy', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateAssumeRolePolicyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'MalformedPolicyDocumentException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'UnmodifiableEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateGroup' => [ 'name' => 'UpdateGroup', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateGroupRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateLoginProfile' => [ 'name' => 'UpdateLoginProfile', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateLoginProfileRequest', ], 'errors' => [ [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'PasswordPolicyViolationException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateOpenIDConnectProviderThumbprint' => [ 'name' => 'UpdateOpenIDConnectProviderThumbprint', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateOpenIDConnectProviderThumbprintRequest', ], 'errors' => [ [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateRoleDescription' => [ 'name' => 'UpdateRoleDescription', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateRoleDescriptionRequest', ], 'output' => [ 'shape' => 'UpdateRoleDescriptionResponse', 'resultWrapper' => 'UpdateRoleDescriptionResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'UnmodifiableEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateSAMLProvider' => [ 'name' => 'UpdateSAMLProvider', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateSAMLProviderRequest', ], 'output' => [ 'shape' => 'UpdateSAMLProviderResponse', 'resultWrapper' => 'UpdateSAMLProviderResult', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidInputException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateSSHPublicKey' => [ 'name' => 'UpdateSSHPublicKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateSSHPublicKeyRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], ], ], 'UpdateServerCertificate' => [ 'name' => 'UpdateServerCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateServerCertificateRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateServiceSpecificCredential' => [ 'name' => 'UpdateServiceSpecificCredential', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateServiceSpecificCredentialRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], ], ], 'UpdateSigningCertificate' => [ 'name' => 'UpdateSigningCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateSigningCertificateRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UpdateUser' => [ 'name' => 'UpdateUser', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UpdateUserRequest', ], 'errors' => [ [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'EntityTemporarilyUnmodifiableException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UploadSSHPublicKey' => [ 'name' => 'UploadSSHPublicKey', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UploadSSHPublicKeyRequest', ], 'output' => [ 'shape' => 'UploadSSHPublicKeyResponse', 'resultWrapper' => 'UploadSSHPublicKeyResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'InvalidPublicKeyException', ], [ 'shape' => 'DuplicateSSHPublicKeyException', ], [ 'shape' => 'UnrecognizedPublicKeyEncodingException', ], ], ], 'UploadServerCertificate' => [ 'name' => 'UploadServerCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UploadServerCertificateRequest', ], 'output' => [ 'shape' => 'UploadServerCertificateResponse', 'resultWrapper' => 'UploadServerCertificateResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'MalformedCertificateException', ], [ 'shape' => 'KeyPairMismatchException', ], [ 'shape' => 'ServiceFailureException', ], ], ], 'UploadSigningCertificate' => [ 'name' => 'UploadSigningCertificate', 'http' => [ 'method' => 'POST', 'requestUri' => '/', ], 'input' => [ 'shape' => 'UploadSigningCertificateRequest', ], 'output' => [ 'shape' => 'UploadSigningCertificateResponse', 'resultWrapper' => 'UploadSigningCertificateResult', ], 'errors' => [ [ 'shape' => 'LimitExceededException', ], [ 'shape' => 'EntityAlreadyExistsException', ], [ 'shape' => 'MalformedCertificateException', ], [ 'shape' => 'InvalidCertificateException', ], [ 'shape' => 'DuplicateCertificateException', ], [ 'shape' => 'NoSuchEntityException', ], [ 'shape' => 'ServiceFailureException', ], ], ], ], 'shapes' => [ 'AccessKey' => [ 'type' => 'structure', 'required' => [ 'UserName', 'AccessKeyId', 'Status', 'SecretAccessKey', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'AccessKeyId' => [ 'shape' => 'accessKeyIdType', ], 'Status' => [ 'shape' => 'statusType', ], 'SecretAccessKey' => [ 'shape' => 'accessKeySecretType', ], 'CreateDate' => [ 'shape' => 'dateType', ], ], ], 'AccessKeyLastUsed' => [ 'type' => 'structure', 'required' => [ 'LastUsedDate', 'ServiceName', 'Region', ], 'members' => [ 'LastUsedDate' => [ 'shape' => 'dateType', ], 'ServiceName' => [ 'shape' => 'stringType', ], 'Region' => [ 'shape' => 'stringType', ], ], ], 'AccessKeyMetadata' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'AccessKeyId' => [ 'shape' => 'accessKeyIdType', ], 'Status' => [ 'shape' => 'statusType', ], 'CreateDate' => [ 'shape' => 'dateType', ], ], ], 'ActionNameListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ActionNameType', ], ], 'ActionNameType' => [ 'type' => 'string', 'max' => 128, 'min' => 3, ], 'AddClientIDToOpenIDConnectProviderRequest' => [ 'type' => 'structure', 'required' => [ 'OpenIDConnectProviderArn', 'ClientID', ], 'members' => [ 'OpenIDConnectProviderArn' => [ 'shape' => 'arnType', ], 'ClientID' => [ 'shape' => 'clientIDType', ], ], ], 'AddRoleToInstanceProfileRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceProfileName', 'RoleName', ], 'members' => [ 'InstanceProfileName' => [ 'shape' => 'instanceProfileNameType', ], 'RoleName' => [ 'shape' => 'roleNameType', ], ], ], 'AddUserToGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'UserName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'UserName' => [ 'shape' => 'existingUserNameType', ], ], ], 'AttachGroupPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'PolicyArn', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'AttachRolePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'PolicyArn', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'AttachUserPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'PolicyArn', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'AttachedPolicy' => [ 'type' => 'structure', 'members' => [ 'PolicyName' => [ 'shape' => 'policyNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'BootstrapDatum' => [ 'type' => 'blob', 'sensitive' => true, ], 'ChangePasswordRequest' => [ 'type' => 'structure', 'required' => [ 'OldPassword', 'NewPassword', ], 'members' => [ 'OldPassword' => [ 'shape' => 'passwordType', ], 'NewPassword' => [ 'shape' => 'passwordType', ], ], ], 'ColumnNumber' => [ 'type' => 'integer', ], 'ContextEntry' => [ 'type' => 'structure', 'members' => [ 'ContextKeyName' => [ 'shape' => 'ContextKeyNameType', ], 'ContextKeyValues' => [ 'shape' => 'ContextKeyValueListType', ], 'ContextKeyType' => [ 'shape' => 'ContextKeyTypeEnum', ], ], ], 'ContextEntryListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ContextEntry', ], ], 'ContextKeyNameType' => [ 'type' => 'string', 'max' => 256, 'min' => 5, ], 'ContextKeyNamesResultListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ContextKeyNameType', ], ], 'ContextKeyTypeEnum' => [ 'type' => 'string', 'enum' => [ 'string', 'stringList', 'numeric', 'numericList', 'boolean', 'booleanList', 'ip', 'ipList', 'binary', 'binaryList', 'date', 'dateList', ], ], 'ContextKeyValueListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'ContextKeyValueType', ], ], 'ContextKeyValueType' => [ 'type' => 'string', ], 'CreateAccessKeyRequest' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], ], ], 'CreateAccessKeyResponse' => [ 'type' => 'structure', 'required' => [ 'AccessKey', ], 'members' => [ 'AccessKey' => [ 'shape' => 'AccessKey', ], ], ], 'CreateAccountAliasRequest' => [ 'type' => 'structure', 'required' => [ 'AccountAlias', ], 'members' => [ 'AccountAlias' => [ 'shape' => 'accountAliasType', ], ], ], 'CreateGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'GroupName' => [ 'shape' => 'groupNameType', ], ], ], 'CreateGroupResponse' => [ 'type' => 'structure', 'required' => [ 'Group', ], 'members' => [ 'Group' => [ 'shape' => 'Group', ], ], ], 'CreateInstanceProfileRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceProfileName', ], 'members' => [ 'InstanceProfileName' => [ 'shape' => 'instanceProfileNameType', ], 'Path' => [ 'shape' => 'pathType', ], ], ], 'CreateInstanceProfileResponse' => [ 'type' => 'structure', 'required' => [ 'InstanceProfile', ], 'members' => [ 'InstanceProfile' => [ 'shape' => 'InstanceProfile', ], ], ], 'CreateLoginProfileRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'Password', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'Password' => [ 'shape' => 'passwordType', ], 'PasswordResetRequired' => [ 'shape' => 'booleanType', ], ], ], 'CreateLoginProfileResponse' => [ 'type' => 'structure', 'required' => [ 'LoginProfile', ], 'members' => [ 'LoginProfile' => [ 'shape' => 'LoginProfile', ], ], ], 'CreateOpenIDConnectProviderRequest' => [ 'type' => 'structure', 'required' => [ 'Url', 'ThumbprintList', ], 'members' => [ 'Url' => [ 'shape' => 'OpenIDConnectProviderUrlType', ], 'ClientIDList' => [ 'shape' => 'clientIDListType', ], 'ThumbprintList' => [ 'shape' => 'thumbprintListType', ], ], ], 'CreateOpenIDConnectProviderResponse' => [ 'type' => 'structure', 'members' => [ 'OpenIDConnectProviderArn' => [ 'shape' => 'arnType', ], ], ], 'CreatePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyName', 'PolicyDocument', ], 'members' => [ 'PolicyName' => [ 'shape' => 'policyNameType', ], 'Path' => [ 'shape' => 'policyPathType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], 'Description' => [ 'shape' => 'policyDescriptionType', ], ], ], 'CreatePolicyResponse' => [ 'type' => 'structure', 'members' => [ 'Policy' => [ 'shape' => 'Policy', ], ], ], 'CreatePolicyVersionRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyArn', 'PolicyDocument', ], 'members' => [ 'PolicyArn' => [ 'shape' => 'arnType', ], 'PolicyDocument' => [ 'shape' => 'policyDocumentType', ], 'SetAsDefault' => [ 'shape' => 'booleanType', ], ], ], 'CreatePolicyVersionResponse' => [ 'type' => 'structure', 'members' => [ 'PolicyVersion' => [ 'shape' => 'PolicyVersion', ], ], ], 'CreateRoleRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'AssumeRolePolicyDocument', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'RoleName' => [ 'shape' => 'roleNameType', ], 'AssumeRolePolicyDocument' => [ 'shape' => 'policyDocumentType', ], 'Description' => [ 'shape' => 'roleDescriptionType', ], ], ], 'CreateRoleResponse' => [ 'type' => 'structure', 'required' => [ 'Role', ], 'members' => [ 'Role' => [ 'shape' => 'Role', ], ], ], 'CreateSAMLProviderRequest' => [ 'type' => 'structure', 'required' => [ 'SAMLMetadataDocument', 'Name', ], 'members' => [ 'SAMLMetadataDocument' => [ 'shape' => 'SAMLMetadataDocumentType', ], 'Name' => [ 'shape' => 'SAMLProviderNameType', ], ], ], 'CreateSAMLProviderResponse' => [ 'type' => 'structure', 'members' => [ 'SAMLProviderArn' => [ 'shape' => 'arnType', ], ], ], 'CreateServiceLinkedRoleRequest' => [ 'type' => 'structure', 'required' => [ 'AWSServiceName', ], 'members' => [ 'AWSServiceName' => [ 'shape' => 'groupNameType', ], 'Description' => [ 'shape' => 'roleDescriptionType', ], 'CustomSuffix' => [ 'shape' => 'customSuffixType', ], ], ], 'CreateServiceLinkedRoleResponse' => [ 'type' => 'structure', 'members' => [ 'Role' => [ 'shape' => 'Role', ], ], ], 'CreateServiceSpecificCredentialRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'ServiceName', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'ServiceName' => [ 'shape' => 'serviceName', ], ], ], 'CreateServiceSpecificCredentialResponse' => [ 'type' => 'structure', 'members' => [ 'ServiceSpecificCredential' => [ 'shape' => 'ServiceSpecificCredential', ], ], ], 'CreateUserRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'UserName' => [ 'shape' => 'userNameType', ], ], ], 'CreateUserResponse' => [ 'type' => 'structure', 'members' => [ 'User' => [ 'shape' => 'User', ], ], ], 'CreateVirtualMFADeviceRequest' => [ 'type' => 'structure', 'required' => [ 'VirtualMFADeviceName', ], 'members' => [ 'Path' => [ 'shape' => 'pathType', ], 'VirtualMFADeviceName' => [ 'shape' => 'virtualMFADeviceName', ], ], ], 'CreateVirtualMFADeviceResponse' => [ 'type' => 'structure', 'required' => [ 'VirtualMFADevice', ], 'members' => [ 'VirtualMFADevice' => [ 'shape' => 'VirtualMFADevice', ], ], ], 'CredentialReportExpiredException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'credentialReportExpiredExceptionMessage', ], ], 'error' => [ 'code' => 'ReportExpired', 'httpStatusCode' => 410, 'senderFault' => true, ], 'exception' => true, ], 'CredentialReportNotPresentException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'credentialReportNotPresentExceptionMessage', ], ], 'error' => [ 'code' => 'ReportNotPresent', 'httpStatusCode' => 410, 'senderFault' => true, ], 'exception' => true, ], 'CredentialReportNotReadyException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'credentialReportNotReadyExceptionMessage', ], ], 'error' => [ 'code' => 'ReportInProgress', 'httpStatusCode' => 404, 'senderFault' => true, ], 'exception' => true, ], 'DeactivateMFADeviceRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SerialNumber', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'SerialNumber' => [ 'shape' => 'serialNumberType', ], ], ], 'DeleteAccessKeyRequest' => [ 'type' => 'structure', 'required' => [ 'AccessKeyId', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'AccessKeyId' => [ 'shape' => 'accessKeyIdType', ], ], ], 'DeleteAccountAliasRequest' => [ 'type' => 'structure', 'required' => [ 'AccountAlias', ], 'members' => [ 'AccountAlias' => [ 'shape' => 'accountAliasType', ], ], ], 'DeleteConflictException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'deleteConflictMessage', ], ], 'error' => [ 'code' => 'DeleteConflict', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], 'DeleteGroupPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'PolicyName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], ], ], 'DeleteGroupRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], ], ], 'DeleteInstanceProfileRequest' => [ 'type' => 'structure', 'required' => [ 'InstanceProfileName', ], 'members' => [ 'InstanceProfileName' => [ 'shape' => 'instanceProfileNameType', ], ], ], 'DeleteLoginProfileRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], ], ], 'DeleteOpenIDConnectProviderRequest' => [ 'type' => 'structure', 'required' => [ 'OpenIDConnectProviderArn', ], 'members' => [ 'OpenIDConnectProviderArn' => [ 'shape' => 'arnType', ], ], ], 'DeletePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyArn', ], 'members' => [ 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'DeletePolicyVersionRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyArn', 'VersionId', ], 'members' => [ 'PolicyArn' => [ 'shape' => 'arnType', ], 'VersionId' => [ 'shape' => 'policyVersionIdType', ], ], ], 'DeleteRolePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'PolicyName', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], ], ], 'DeleteRoleRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], ], ], 'DeleteSAMLProviderRequest' => [ 'type' => 'structure', 'required' => [ 'SAMLProviderArn', ], 'members' => [ 'SAMLProviderArn' => [ 'shape' => 'arnType', ], ], ], 'DeleteSSHPublicKeyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SSHPublicKeyId', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'SSHPublicKeyId' => [ 'shape' => 'publicKeyIdType', ], ], ], 'DeleteServerCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'ServerCertificateName', ], 'members' => [ 'ServerCertificateName' => [ 'shape' => 'serverCertificateNameType', ], ], ], 'DeleteServiceSpecificCredentialRequest' => [ 'type' => 'structure', 'required' => [ 'ServiceSpecificCredentialId', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'ServiceSpecificCredentialId' => [ 'shape' => 'serviceSpecificCredentialId', ], ], ], 'DeleteSigningCertificateRequest' => [ 'type' => 'structure', 'required' => [ 'CertificateId', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'CertificateId' => [ 'shape' => 'certificateIdType', ], ], ], 'DeleteUserPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'PolicyName', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'PolicyName' => [ 'shape' => 'policyNameType', ], ], ], 'DeleteUserRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], ], ], 'DeleteVirtualMFADeviceRequest' => [ 'type' => 'structure', 'required' => [ 'SerialNumber', ], 'members' => [ 'SerialNumber' => [ 'shape' => 'serialNumberType', ], ], ], 'DetachGroupPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'GroupName', 'PolicyArn', ], 'members' => [ 'GroupName' => [ 'shape' => 'groupNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'DetachRolePolicyRequest' => [ 'type' => 'structure', 'required' => [ 'RoleName', 'PolicyArn', ], 'members' => [ 'RoleName' => [ 'shape' => 'roleNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'DetachUserPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'PolicyArn', ], 'members' => [ 'UserName' => [ 'shape' => 'userNameType', ], 'PolicyArn' => [ 'shape' => 'arnType', ], ], ], 'DuplicateCertificateException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'duplicateCertificateMessage', ], ], 'error' => [ 'code' => 'DuplicateCertificate', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], 'DuplicateSSHPublicKeyException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'duplicateSSHPublicKeyMessage', ], ], 'error' => [ 'code' => 'DuplicateSSHPublicKey', 'httpStatusCode' => 400, 'senderFault' => true, ], 'exception' => true, ], 'EnableMFADeviceRequest' => [ 'type' => 'structure', 'required' => [ 'UserName', 'SerialNumber', 'AuthenticationCode1', 'AuthenticationCode2', ], 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'SerialNumber' => [ 'shape' => 'serialNumberType', ], 'AuthenticationCode1' => [ 'shape' => 'authenticationCodeType', ], 'AuthenticationCode2' => [ 'shape' => 'authenticationCodeType', ], ], ], 'EntityAlreadyExistsException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'entityAlreadyExistsMessage', ], ], 'error' => [ 'code' => 'EntityAlreadyExists', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], 'EntityTemporarilyUnmodifiableException' => [ 'type' => 'structure', 'members' => [ 'message' => [ 'shape' => 'entityTemporarilyUnmodifiableMessage', ], ], 'error' => [ 'code' => 'EntityTemporarilyUnmodifiable', 'httpStatusCode' => 409, 'senderFault' => true, ], 'exception' => true, ], 'EntityType' => [ 'type' => 'string', 'enum' => [ 'User', 'Role', 'Group', 'LocalManagedPolicy', 'AWSManagedPolicy', ], ], 'EvalDecisionDetailsType' => [ 'type' => 'map', 'key' => [ 'shape' => 'EvalDecisionSourceType', ], 'value' => [ 'shape' => 'PolicyEvaluationDecisionType', ], ], 'EvalDecisionSourceType' => [ 'type' => 'string', 'max' => 256, 'min' => 3, ], 'EvaluationResult' => [ 'type' => 'structure', 'required' => [ 'EvalActionName', 'EvalDecision', ], 'members' => [ 'EvalActionName' => [ 'shape' => 'ActionNameType', ], 'EvalResourceName' => [ 'shape' => 'ResourceNameType', ], 'EvalDecision' => [ 'shape' => 'PolicyEvaluationDecisionType', ], 'MatchedStatements' => [ 'shape' => 'StatementListType', ], 'MissingContextValues' => [ 'shape' => 'ContextKeyNamesResultListType', ], 'OrganizationsDecisionDetail' => [ 'shape' => 'OrganizationsDecisionDetail', ], 'EvalDecisionDetails' => [ 'shape' => 'EvalDecisionDetailsType', ], 'ResourceSpecificResults' => [ 'shape' => 'ResourceSpecificResultListType', ], ], ], 'EvaluationResultsListType' => [ 'type' => 'list', 'member' => [ 'shape' => 'EvaluationResult', ], ], 'GenerateCredentialReportResponse' => [ 'type' => 'structure', 'members' => [ 'State' => [ 'shape' => 'ReportStateType', ], 'Description' => [ 'shape' => 'ReportStateDescriptionType', ], ], ], 'GetAccessKeyLastUsedRequest' => [ 'type' => 'structure', 'required' => [ 'AccessKeyId', ], 'members' => [ 'AccessKeyId' => [ 'shape' => 'accessKeyIdType', ], ], ], 'GetAccessKeyLastUsedResponse' => [ 'type' => 'structure', 'members' => [ 'UserName' => [ 'shape' => 'existingUserNameType', ], 'AccessKeyLastUsed' => [ 'shape' => 'AccessKeyLastUsed', ], ], ], 'GetAccountAuthorizationDetailsRequest' => [ 'type' => 'structure', 'members' => [ 'Filter' => [ 'shape' => 'entityListType', ], 'MaxItems' => [ 'shape' => 'maxItemsType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'GetAccountAuthorizationDetailsResponse' => [ 'type' => 'structure', 'members' => [ 'UserDetailList' => [ 'shape' => 'userDetailListType', ], 'GroupDetailList' => [ 'shape' => 'groupDetailListType', ], 'RoleDetailList' => [ 'shape' => 'roleDetailListType', ], 'Policies' => [ 'shape' => 'ManagedPolicyDetailListType', ], 'IsTruncated' => [ 'shape' => 'booleanType', ], 'Marker' => [ 'shape' => 'markerType', ], ], ], 'GetAccountPasswordPolicyResponse' => [ 'type' => 'structure', 'required' => [ 'PasswordPolicy', ], 'members' => [ 'PasswordPolicy' => [ 'shape' => 'PasswordPolicy', ], ], ], 'GetAccountSummaryResponse' => [ 'type' => 'structure', 'members' => [ 'SummaryMap' => [ 'shape' => 'summaryMapType', ], ], ], 'GetContextKeysForCustomPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicyInputList', ], 'members' => [ 'PolicyInputList' => [ 'shape' => 'SimulationPolicyListType', ], ], ], 'GetContextKeysForPolicyResponse' => [ 'type' => 'structure', 'members' => [ 'ContextKeyNames' => [ 'shape' => 'ContextKeyNamesResultListType', ], ], ], 'GetContextKeysForPrincipalPolicyRequest' => [ 'type' => 'structure', 'required' => [ 'PolicySo